<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllowNull" xml:space="preserve">
    <value>允许为Null</value>
  </data>
  <data name="BatchGenerate" xml:space="preserve">
    <value>批量生成</value>
  </data>
  <data name="ClassName" xml:space="preserve">
    <value>类名</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>清理</value>
  </data>
  <data name="ColumnDescription" xml:space="preserve">
    <value>列描述</value>
  </data>
  <data name="ColumnName" xml:space="preserve">
    <value>列名</value>
  </data>
  <data name="ColumnSummary" xml:space="preserve">
    <value>列概述</value>
  </data>
  <data name="CustomSearchLength" xml:space="preserve">
    <value>自定义搜索长度</value>
  </data>
  <data name="CustomSearchType" xml:space="preserve">
    <value>自定义搜索类型</value>
  </data>
  <data name="DbDataType" xml:space="preserve">
    <value>数据库类型</value>
  </data>
  <data name="EditComponentType" xml:space="preserve">
    <value>编辑组件类型</value>
  </data>
  <data name="EntityFromTable" xml:space="preserve">
    <value>开启表建表</value>
  </data>
  <data name="EntityFromTableSettings" xml:space="preserve">
    <value>表建表设置</value>
  </data>
  <data name="ExplainAllowNull" xml:space="preserve">
    <value>设为true将在初始化CodeGenConfig时将IsNullable设置为true</value>
  </data>
  <data name="ExplainEntityFromTable" xml:space="preserve">
    <value>表建类选项，根据现有的表生成类和多语言文件</value>
  </data>
  <data name="GenerateBaseClass" xml:space="preserve">
    <value>生成基础类</value>
  </data>
  <data name="GenerateLocaleFile" xml:space="preserve">
    <value>生成多语言文件</value>
  </data>
  <data name="GenerateMenu" xml:space="preserve">
    <value>生成菜单</value>
  </data>
  <data name="GenerateProjectFile" xml:space="preserve">
    <value>生成项目文件</value>
  </data>
  <data name="GenerateSelectFields" xml:space="preserve">
    <value>生成Select字段</value>
  </data>
  <data name="GenerateService" xml:space="preserve">
    <value>生成Service</value>
  </data>
  <data name="HasAdd" xml:space="preserve">
    <value>包含添加</value>
  </data>
  <data name="HasBatchDelete" xml:space="preserve">
    <value>包含批量删除</value>
  </data>
  <data name="HasDelete" xml:space="preserve">
    <value>包含删除</value>
  </data>
  <data name="HasEdit" xml:space="preserve">
    <value>包含编辑</value>
  </data>
  <data name="IconName" xml:space="preserve">
    <value>图标名称</value>
  </data>
  <data name="IsCommon" xml:space="preserve">
    <value>是否公共</value>
  </data>
  <data name="IsCustomSearch" xml:space="preserve">
    <value>是否自定义搜索</value>
  </data>
  <data name="IsEdit" xml:space="preserve">
    <value>是否编辑</value>
  </data>
  <data name="IsEntity" xml:space="preserve">
    <value>生成实体</value>
  </data>
  <data name="IsRequired" xml:space="preserve">
    <value>是否必填</value>
  </data>
  <data name="IsSearch" xml:space="preserve">
    <value>是否搜索</value>
  </data>
  <data name="IsView" xml:space="preserve">
    <value>是否显示</value>
  </data>
  <data name="MenuName" xml:space="preserve">
    <value>菜单名称</value>
  </data>
  <data name="MlLgWBeImp" xml:space="preserve">
    <value>将导入多语言</value>
  </data>
  <data name="Module" xml:space="preserve">
    <value>模块</value>
  </data>
  <data name="NetColumnName" xml:space="preserve">
    <value>程序列名</value>
  </data>
  <data name="NetType" xml:space="preserve">
    <value>程序类型</value>
  </data>
  <data name="NewTableName" xml:space="preserve">
    <value>新表名</value>
  </data>
  <data name="OnlySave" xml:space="preserve">
    <value>仅保存</value>
  </data>
  <data name="OpenCodeGenFolder" xml:space="preserve">
    <value>打开代码目录</value>
  </data>
  <data name="OperateConfirmMessage" xml:space="preserve">
    <value>确认要执行吗</value>
  </data>
  <data name="OriginalModule" xml:space="preserve">
    <value>原始模块</value>
  </data>
  <data name="ParentMenu" xml:space="preserve">
    <value>父级菜单</value>
  </data>
  <data name="PrimaryKeyName" xml:space="preserve">
    <value>主键名称</value>
  </data>
  <data name="Remark" xml:space="preserve">
    <value>备注</value>
  </data>
  <data name="SaveAndClose" xml:space="preserve">
    <value>保存并关闭</value>
  </data>
  <data name="SaveAndResetSettings" xml:space="preserve">
    <value>保存并重置配置</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>全选</value>
  </data>
  <data name="TableDescription" xml:space="preserve">
    <value>表描述</value>
  </data>
  <data name="TableName" xml:space="preserve">
    <value>表名</value>
  </data>
  <data name="ToggleSelect" xml:space="preserve">
    <value>反选</value>
  </data>
  <data name="UseChineseKey" xml:space="preserve">
    <value>使用中文关键字</value>
  </data>
  <data name="UseCustomTemplate" xml:space="preserve">
    <value>使用自定义模板</value>
  </data>
  <data name="UseNetColumnAsKey" xml:space="preserve">
    <value>多语言使用C#列名为Key</value>
  </data>
  <data name="ViewComponentType" xml:space="preserve">
    <value>显示组件类型</value>
  </data>
</root>