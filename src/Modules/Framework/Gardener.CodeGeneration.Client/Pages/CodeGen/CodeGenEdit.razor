@using Gardener.Base
@using Gardener.SystemManager.Dtos
@inherits EditOperationDialogBase<CodeGenDto, int>

<Form Loading="@_isLoading"
      Model="@_editModel"
      LabelCol="new ColLayoutParam { Span = 8 }"
      WrapperCol="new ColLayoutParam { Span = 16 }"
      OnFinish="OnFormFinish"
      Context="model">
    <FormItem Label="@(localizer["_CodeGen.TableName"])">
        <Select DataSource="_allTables"
            Style="width:300px;"
                OnSelectedItemChanged="OnTableSelectChanged"
                @bind-Value="@model.TableName"
                ValueName="@nameof(SelectItem.ValueName)"
                LabelName="@nameof(SelectItem.LabelName)"
                TItem="SelectItem"
                TItemValue="string"
                EnableSearch
                AllowClear>
        </Select>
    </FormItem>

    <FormItem Label="@(localizer["_CodeGen.ClassName"])">
        <Input @bind-Value="@model.ClassName" Placeholder=@localizer["Class Name"] />
    </FormItem>

    <FormItem Label="@(localizer["_CodeGen.Module"])">
        <Input @bind-Value="@model.Module" Placeholder=@localizer["Module"] />
    </FormItem>

     <FormItem Label="@(localizer["_CodeGen.Remark"])">
        <Input @bind-Value="@model.Remark" />
    </FormItem>


    <FormItem Label="@(localizer["_CodeGen.MenuParentId"])">
        <Input @bind-Value="@model.MenuParentId" Type="hidden" />
        @if (_menuTree != null && _menuTree.Count > 0)
        {
            <TreeSelect TItem="ResourceDto"
                    Style="width:100%;"
                    DataSource="_menuTree"
                    @bind-Value="@_menuParentId"
                    Placeholder="@localizer["PleaseSelect"]"
                    AllowClear="false"
                    TitleExpression="node=>localizer[node.DataItem.Name]"
                    KeyExpression="node =>node.DataItem.Id.ToString()"
                    ChildrenExpression="node =>node.DataItem.Children?.ToList()"
                    IsLeafExpression="node =>node.DataItem.Children==null || !node.DataItem.Children.Any()"
                    TreeDefaultExpandAll="true"
                    ShowExpand="true"
                    DisabledExpression="node=>node.DataItem.Id.Equals(_editModel.Id)">
            </TreeSelect>
        }
    </FormItem>

    <FormItem Label="@(localizer["_CodeGen.IconName"])">
        <Input @bind-Value="@model.IconName" Placeholder=@localizer["IconName"] />
    </FormItem>

    <FormItem Label="@(localizer["_CodeGen.PrimaryKeyName"])">
        <Input @bind-Value="@model.PrimaryKeyName" Placeholder=@localizer["PrimaryKeyName"] />
    </FormItem>

    <FormItem Label="@localizer["Generate"]">
        <CheckboxGroup Style="width:100%">
            <Row>
                <Col Span="8">
                <Checkbox @bind-Value="@model.GenerateProjectFile">
                        @(localizer["_CodeGen.GenerateProjectFile"])
                </Checkbox>
                </Col>
                <Col Span="8">
                <Checkbox @bind-Value="@model.GenerateBaseClass">
                        @(localizer["_CodeGen.GenerateBaseClass"])
                </Checkbox>
                </Col>
                <Col Span="8">
                <Checkbox @bind-Value="@model.GenerateService">
                        @(localizer["_CodeGen.GenerateService"])
                </Checkbox>
                </Col>
                <Col Span="8">
                <Checkbox @bind-Value="@model.GenerateLocaleFile">
                        @(localizer["_CodeGen.GenerateLocaleFile"])
                </Checkbox>
                </Col>
            </Row>
        </CheckboxGroup>
    </FormItem>

    @*<FormItem Label=@localizer["_CodeGen.GenerateProjectFile"]>
        <Switch @bind-Value="@model.GenerateProjectFile"></Switch>
    </FormItem>
    <FormItem Label=@localizer["_CodeGen.GenerateBaseClass"]>
        <Switch @bind-Value="@model.GenerateBaseClass"></Switch>
    </FormItem>*@

    <FormItem Label=@localizer["_CodeGen.GenerateSelectFields"]>
        <Switch @bind-Value="@model.GenerateSelectFields"></Switch>
    </FormItem>

    <FormItem Label=@localizer["_CodeGen.UseCustomTemplate"]>
        <Switch @bind-Value="@model.UseCustomTemplate"></Switch>
    </FormItem>

    <FormItem Label=@localizer["_CodeGen.UseChineseKey"]>
        <Switch @bind-Value="@model.UseChineseKey"></Switch>
    </FormItem>

    <FormItem Label=@localizer["_CodeGen.UseNetColumnAsKey"]>
        <Switch @bind-Value="@model.UseNetColumnAsKey"></Switch>
    </FormItem>

    <FormItem Label="@localizer["Button"]">
        <CheckboxGroup Style="width:100%">
            <Row>
                <Col Span="8">
                <Checkbox @bind-Value="@model.HasAdd">
                        @(localizer["_CodeGen.HasAdd"])
                </Checkbox>
                </Col>
                <Col Span="8">
                <Checkbox @bind-Value="@model.HasEdit">
                        @(localizer["_CodeGen.HasEdit"])
                </Checkbox>
                </Col>
                <Col Span="8">
                <Checkbox @bind-Value="@model.HasDelete">
                        @(localizer["_CodeGen.HasDelete"])
                </Checkbox>
                </Col>
                <Col Span="8">
                <Checkbox @bind-Value="@model.HasBatchDelete">
                        @(localizer["_CodeGen.HasBatchDelete"])
                </Checkbox>
                </Col>
            </Row>
        </CheckboxGroup>
    </FormItem>

    @*<FormItem Label=@localizer["_CodeGen.HasAdd"]>
        <Switch @bind-Value="@model.HasAdd"></Switch>
    </FormItem>
    <FormItem Label=@localizer["_CodeGen.HasEdit"]>
        <Switch @bind-Value="@model.HasEdit"></Switch>
    </FormItem>
    <FormItem Label=@localizer["_CodeGen.HasDelete"]>
        <Switch @bind-Value="@model.HasDelete"></Switch>
    </FormItem>
    <FormItem Label=@localizer["_CodeGen.HasBatchDelete"]>
        <Switch @bind-Value="@model.HasBatchDelete"></Switch>
    </FormItem>*@

    <FormItem Label="@(localizer["_CodeGen.TableDescriptionEN"])">
        <Input @bind-Value="@model.TableDescriptionEN" />
    </FormItem>

    <FormItem Label="@(localizer["_CodeGen.TableDescriptionCH"])">
        <Input @bind-Value="@model.TableDescriptionCH" />
    </FormItem>

    <FormItem Label="@(localizer["_CodeGen.MenuNameEN"])">
        <Input @bind-Value="@model.MenuNameEN" Placeholder=@localizer["MenuNameEN"] />
    </FormItem>

    <FormItem Label="@(localizer["_CodeGen.MenuNameCH"])">
        <Input @bind-Value="@model.MenuNameCH" Placeholder=@localizer["MenuNameCH"] />
    </FormItem>

    <FormItem Label=@localizer["_CodeGen.EntityFromTable"]>
        <Tooltip Title="@localizer["表建类选项，根据现有的表生成类和多语言文件"]" ArrowPointAtCenter="true">
            <Switch @bind-Value="@model.EntityFromTable"></Switch>
        </Tooltip>
        @if(model.EntityFromTable)
        {
            <Collapse DefaultActiveKey="@(new[]{"1"})">
                <Panel Header="表建表选项" Key="1" Active="@model.EntityFromTable">
                    <FormItem Label="@(localizer["_CodeGen.OriginModule"])">
                        <Input @bind-Value="@model.OriginModule" Placeholder=@localizer["OriginModule"] />
                    </FormItem>

                    <FormItem Label="@(localizer["_CodeGen.NewTableName"])">
                        <Input @bind-Value="@model.NewTableName" Placeholder=@localizer["NewTableName"] />
                    </FormItem>

                    <FormItem Label=@localizer["_CodeGen.AllowNull"]>
                        <Tooltip Title="@localizer["用于表建表，设为true将在初始化CodeGenConfig时将IsNullable设置为true"]" ArrowPointAtCenter="true">
                            <Switch @bind-Value="@model.AllowNull"></Switch>
                        </Tooltip>
                    </FormItem>
                </Panel>
            </Collapse>
        }
    </FormItem>



    @if (this.Options.Type.Equals(DrawerInputType.Edit) || this.Options.Type.Equals(DrawerInputType.Select))
    {
        <FormItem Label="创建时间">
            <span>@model.CreatedTime.ToString(ClientConstant.DateTimeFormat)</span>
        </FormItem>
        <FormItem Label="更新时间">
            <span>@model.UpdatedTime?.ToString(ClientConstant.DateTimeFormat)</span>
        </FormItem>
    }
    <FormItem WrapperColOffset="8" WrapperColSpan="16">
        <Space>
            @if (this.Options.Type == DrawerInputType.Edit)
            {
                <SpaceItem>
                    <Button Type="@ButtonType.Primary" OnClick="OnlySaveCodeGen">
                        @localizer["仅保存"]
                    </Button>
                </SpaceItem>
                <SpaceItem>
                    <Button Type="@ButtonType.Primary" Danger HtmlType="submit">
                        @localizer["保存并重置Config"]
                    </Button>
                </SpaceItem>
            }
            else if (this.Options.Type == DrawerInputType.Add)
            {
                <SpaceItem>
                    <Button Type="@ButtonType.Primary" HtmlType="submit">
                        @localizer["保存"]
                    </Button>
                </SpaceItem>
            }
            <SpaceItem>
                <Button OnClick="_=>OnFormCancel()">
                    @localizer["取消"]
                </Button>
            </SpaceItem>
        </Space>
    </FormItem>
</Form>